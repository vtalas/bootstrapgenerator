@using bootstrapgenerator.Code
@helper VariablesItem(string item)
	{
	<tr>
		<td>
			@@@item
		</td>
		<td title="{{data.@(item).value}}" ng-dblclick="showColorPicker($event, data.@(item))" >
			
			
			
			

			<input ng-model="data.@item" bootstrapelem="data.@item" />&nbsp;&nbsp;&nbsp;
		</td>
	</tr>
}
@helper VariablesGroup(string name, string id, string[] values)
	{
	<text>
	<div class="VariablesGroup">
		<h3>@name</h3>
		@{
			const int count = 5;
			int len = values.Length / count;
			if (values.Length % count > 0) { len++; }
		}
		@for (int i = 0; i < len; i++)
  {
			<table style="float: left">
				@values.List(i, count, @<text>@VariablesItem(item)</text>)
			</table>
  }
	</div>
	</text>;
}
@helper AccordionGroup(string name, Func<dynamic, HelperResult> action)
	{
		var id = Guid.NewGuid().ToString();

	<div class="accordion-group">
		<div class="accordion-heading">
			<a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#@id" >@name</a>
		</div>
		<div id="@id" class="accordion-body collapse" >
			<div class="accordion-inner clearfix">
				@action(null)
			</div>
		</div>
	</div>
}
@helper PreviewModeGroup(string name, Func<dynamic, HelperResult> action)
	{
	@action(null)
}
